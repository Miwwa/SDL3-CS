name: Auto update

# Run only manually for now
# todo: automate updates for SDL3 releases 
on: 
  workflow_dispatch:
  push: 
    paths:
      - '.github/workflows/**'
      - 'GenerateBindings/**.cs'

jobs:
  generate:
    name: Generate bindings
    runs-on: ubuntu-24.04
    env:
      GH_TOKEN: ${{ github.token }}
      CC: clang-18
      CXX: clang++-18
      SDL_REPO: https://github.com/libsdl-org/SDL
      SDL_WIN_X64: SDL-VC-x64
      SDL_OSX_ARM64: SDL-macos-arm64-gnu
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Update SDL submodule
        run: git submodule update --remote SDL

      - name: Setup gh
        uses: wusatosi/setup-gh@v1

      - name: Install .Net 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x.x'

      - name: Install LLVM, Clang and CMake
        run: |
          sudo apt update -y
          sudo apt install -y wget software-properties-common
          wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 18
          sudo apt install -y llvm-18 clang-18 libclang-18-dev libclang-cpp18-dev cmake

      - name: Cache c2ffi
        id: cache-c2ffi
        uses: actions/cache@v4
        with:
          path: ./c2ffi/build/bin
          key: c2ffi-${{ runner.os }}

      - name: Build c2ffi
        if: steps.cache-c2ffi.outputs.cache-hit != 'true'
        run: |
          cd c2ffi && rm -rf build && mkdir -p build && cd build && \
          cmake -DCMAKE_PREFIX_PATH=/usr/lib/llvm-18 -DLLVM_DIR=/usr/lib/llvm-18/lib/cmake/llvm -DBUILD_CONFIG=Release .. && make

      - name: Generate ffi.json
        run: ./c2ffi/build/bin/c2ffi -i ./SDL/include -o ./GenerateBindings/assets/ffi.json ./GenerateBindings/assets/ffi.h

      - name: Build GenerateBindings
        run: dotnet publish ./GenerateBindings/GenerateBindings.csproj -c Release

      - name: Generate SDL3.Legacy.cs
        run: ./GenerateBindings/bin/Release/net8.0/publish/GenerateBindings ./SDL

      - name: Generate SDL3.Core.cs
        run: ./GenerateBindings/bin/Release/net8.0/publish/GenerateBindings ./SDL --core

      - name: Build SDL3.Core
        run: dotnet build ./SDL3/SDL3.Core.csproj -c Release

      - name: Get SDL repo's run info
        run: |
          SDL_COMMIT=$(git ls-tree HEAD SDL --object-only)
          echo "SDL_COMMIT=$SDL_COMMIT" >> $GITHUB_ENV
          RUN_ID=$(gh run list --commit $SDL_COMMIT --json databaseId --jq '.[] | .databaseId' -R $SDL_REPO)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Download native SDL libs
        uses: actions/download-artifact@v4
        with:
          pattern: "{${{ env.SDL_WIN_X64 }},${{ env.SDL_OSX_ARM64 }}}"
          path: ./downloads
          merge-multiple: false
          github-token: ${{ github.token }}
          repository: libsdl-org/SDL
          run-id: ${{ env.RUN_ID }}

      - name: Copy win-x64
        run: |
          NATIVE_PATH=$(realpath ./native)
          cd "./downloads/$SDL_WIN_X64/dist" || exit
          unzip "$(find . -type f -name "*Windows-VC*")"
          mkdir -p "$NATIVE_PATH/win-x64"
          cp "$(find . -type d -name "*Windows-VC*")/bin/SDL3.dll" "$NATIVE_PATH/win-x64/SDL3.dll"
          cp "$(find . -type d -name "*Windows-VC*")/lib/SDL3.lib" "$NATIVE_PATH/win-x64/SDL3.lib"

      - name: Copy osx-arm64
        run: |
          NATIVE_PATH=$(realpath ./native)
          cd "./downloads/$SDL_OSX_ARM64/dist" || exit
          tar -xzf "$(find . -type f -name "*-macOS.tar.gz")"
          mkdir -p "$NATIVE_PATH/osx-arm64"
          cp "$(find . -type d -name "*-macOS")/lib/libSDL3.0.dylib" "$NATIVE_PATH/osx-arm64/libSDL3.0.dylib"
          cp "$(find . -type d -name "*-macOS")/lib/libSDL3.a"       "$NATIVE_PATH/osx-arm64/libSDL3.a"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: update SDL
          title: "[Automatic] Update SDL"
          branch: sdl-update
          delete-branch: true
          body: Automatic SDL binding
