name: Auto update

# Run only manually for now
# todo: automate updates for SDL3 releases 
on: [ workflow_dispatch ]

jobs:
  build-dockerfile:
    name: Build Dockerfile
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/miwwa/sdl3-gen:latest
          cache-from: type=registry,ref=ghcr.io/miwwa/sdl3-gen:buildcache
          cache-to: type=registry,ref=ghcr.io/miwwa/sdl3-gen:buildcache,mode=max
  
  generate:
    name: Generate bindings
    runs-on: ubuntu-24.04
    needs: [ build-dockerfile ]
    env: 
      SDL_REPO: https://github.com/libsdl-org/SDL
    steps:
      - name: Setup .Net 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x.x'

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Update SDL submodule
        run: git submodule update --remote SDL

      - name: Generate sources
        run: docker run --rm -v .:/app -w /app --name sdl3-cs ghcr.io/miwwa/sdl3-gen:latest

      - name: Build GenerateBindings
        run: dotnet build GenerateBindings -c Release
      
      # msbuild is not available for Ubuntu 24 at the moment.
      #      - name: msbuild SDL3
      #        run: msbuild -restore ./SDL3/SDL3-CS.Legacy.sln /p:Configuration=Release

      - name: Build SDL3.Core
        run: dotnet build ./SDL3/SDL3.Core.csproj -c Release

      - name: Get SDL repo's run info
        run: |
          SDL_COMMIT=$(git ls-tree HEAD SDL --object-only)
          RUN_ID=$(gh run list -c $SDL_COMMIT --json databaseId --jq '.[] | .databaseId' -R $SDL_REPO)
      
      - name: Download native SDL libs
        uses: actions/download-artifact@v4
        with:
          pattern: SDL-{VC-x64,macos-arm64}*
          path: downloads
          merge-multiple: true
          repository: ${{ env.SDL_REPO }}
          run-id: ${{ env.RUN_ID }}
          
      - name: Unzip win-x64
        run: cd ./downloads/dist && unzip $(find -type f -name "*Windows-VC*")
          
      - name: Copy win-x64
        run: |
          mkdir -p ./native/win-x64
          cp $(find ./downloads/dist -type d -name "*Windows-VC*")/bin/SDL3.dll ./native/win-x64/SDL3.dll
          cp $(find ./downloads/dist -type d -name "*Windows-VC*")/lib/SDL3.lib ./native/win-x64/SDL3.lib
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: update SDL
          title: "[Automatic] Update SDL"
          branch: sdl-update
          delete-branch: true
          body: |
            Automatic SDL binding
